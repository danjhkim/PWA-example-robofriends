{"version":3,"sources":["serviceWorkerRegistration.js","reportWebVitals.js","reducers/requestRobotsReducer.js","actions/types.js","reducers/searchRobotsReducer.js","reducers/index.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","components/CounterButton.js","components/Header.js","containers/App.js","actions/index.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","INITAL_STATE_ROBOTS","isPending","robots","requestRobots","arguments","length","undefined","action","type","Object","objectSpread","payload","INITAL_STATE_SEARCH","searchField","searchRobots","combineReducers","searchRobotsReducer","requestRobotsReducer","Card","name","email","id","react_default","a","createElement","className","src","concat","alt","CardList","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","aria-label","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hasError","Component","CounterButton","color","_useState","useState","_useState2","slicedToArray","count","setCount","onClick","c","React","memo","components_CounterButton","App","dispatch","useDispatch","useSelector","AbortController","signal","addEventListener","useEffect","fetch","response","json","data","err","filteredRobots","filter","robot","toLowerCase","includes","components_Header","components_SearchBox","event","target","value","components_Scroll","components_ErrorBoundary","components_CardList","logger","createLogger","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","StrictMode","es","containers_App","document","getElementById","URL","process","href","origin","headers","Service-Worker","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.2ba8e78b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n\twindow.location.hostname === 'localhost' ||\n\t\t// [::1] is the IPv6 localhost address.\n\t\twindow.location.hostname === '[::1]' ||\n\t\t// 127.0.0.0/8 are considered localhost for IPv4.\n\t\twindow.location.hostname.match(\n\t\t\t/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n\t\t),\n);\n\nexport function register(config) {\n\tif (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\t\t// The URL constructor is available in all browsers that support SW.\n\t\tconst publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n\t\tif (publicUrl.origin !== window.location.origin) {\n\t\t\t// Our service worker won't work if PUBLIC_URL is on a different origin\n\t\t\t// from what our page is served on. This might happen if a CDN is used to\n\t\t\t// serve assets; see https://github.com/facebook/create-react-app/issues/2374\n\t\t\treturn;\n\t\t}\n\n\t\twindow.addEventListener('load', () => {\n\t\t\tconst swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n\t\t\tif (isLocalhost) {\n\t\t\t\t// This is running on localhost. Let's check if a service worker still exists or not.\n\t\t\t\tcheckValidServiceWorker(swUrl, config);\n\n\t\t\t\t// Add some additional logging to localhost, pointing developers to the\n\t\t\t\t// service worker/PWA documentation.\n\t\t\t\tnavigator.serviceWorker.ready.then(() => {\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t'This web app is being served cache-first by a service ' +\n\t\t\t\t\t\t\t'worker. To learn more, visit https://cra.link/PWA',\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Is not localhost. Just register service worker\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction registerValidSW(swUrl, config) {\n\tnavigator.serviceWorker\n\t\t.register(swUrl)\n\t\t.then(registration => {\n\t\t\tregistration.onupdatefound = () => {\n\t\t\t\tconst installingWorker = registration.installing;\n\t\t\t\tif (installingWorker == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tinstallingWorker.onstatechange = () => {\n\t\t\t\t\tif (installingWorker.state === 'installed') {\n\t\t\t\t\t\tif (navigator.serviceWorker.controller) {\n\t\t\t\t\t\t\t// At this point, the updated precached content has been fetched,\n\t\t\t\t\t\t\t// but the previous service worker will still serve the older\n\t\t\t\t\t\t\t// content until all client tabs are closed.\n\t\t\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t\t\t'New content is available and will be used when all ' +\n\t\t\t\t\t\t\t\t\t'tabs for this page are closed. See https://cra.link/PWA.',\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onUpdate) {\n\t\t\t\t\t\t\t\tconfig.onUpdate(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// At this point, everything has been precached.\n\t\t\t\t\t\t\t// It's the perfect time to display a\n\t\t\t\t\t\t\t// \"Content is cached for offline use.\" message.\n\t\t\t\t\t\t\tconsole.log('Content is cached for offline use.');\n\n\t\t\t\t\t\t\t// Execute callback\n\t\t\t\t\t\t\tif (config && config.onSuccess) {\n\t\t\t\t\t\t\t\tconfig.onSuccess(registration);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t})\n\t\t.catch(error => {\n\t\t\tconsole.error('Error during service worker registration:', error);\n\t\t});\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n\t// Check if the service worker can be found. If it can't reload the page.\n\tfetch(swUrl, {\n\t\theaders: { 'Service-Worker': 'script' },\n\t})\n\t\t.then(response => {\n\t\t\t// Ensure service worker exists, and that we really are getting a JS file.\n\t\t\tconst contentType = response.headers.get('content-type');\n\t\t\tif (\n\t\t\t\tresponse.status === 404 ||\n\t\t\t\t(contentType != null &&\n\t\t\t\t\tcontentType.indexOf('javascript') === -1)\n\t\t\t) {\n\t\t\t\t// No service worker found. Probably a different app. Reload the page.\n\t\t\t\tnavigator.serviceWorker.ready.then(registration => {\n\t\t\t\t\tregistration.unregister().then(() => {\n\t\t\t\t\t\twindow.location.reload();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// Service worker found. Proceed as normal.\n\t\t\t\tregisterValidSW(swUrl, config);\n\t\t\t}\n\t\t})\n\t\t.catch(() => {\n\t\t\tconsole.log(\n\t\t\t\t'No internet connection found. App is running in offline mode.',\n\t\t\t);\n\t\t});\n}\n\nexport function unregister() {\n\tif ('serviceWorker' in navigator) {\n\t\tnavigator.serviceWorker.ready\n\t\t\t.then(registration => {\n\t\t\t\tregistration.unregister();\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.error(error.message);\n\t\t\t});\n\t}\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n\tREQUEST_ROBOTS_PENDING,\r\n\tREQUEST_ROBOTS_SUCCESS,\r\n\tREQUEST_ROBOTS_FAIL,\r\n} from '../actions/types';\r\n\r\nconst INITAL_STATE_ROBOTS = {\r\n\tisPending: false,\r\n\trobots: [],\r\n\terror: '',\r\n};\r\n\r\nconst requestRobots = (state = INITAL_STATE_ROBOTS, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase REQUEST_ROBOTS_PENDING:\r\n\t\t\treturn { ...state, isPending: true };\r\n\t\tcase REQUEST_ROBOTS_SUCCESS:\r\n\t\t\treturn { ...state, robots: action.payload, isPending: false };\r\n\t\tcase REQUEST_ROBOTS_FAIL:\r\n\t\t\treturn { ...state, error: action.payload, isPending: false };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default requestRobots;\r\n","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\nexport const REQUEST_ROBOTS_PENDING = 'REQUEST_ROBOTS_PENDING';\r\nexport const REQUEST_ROBOTS_SUCCESS = 'REQUEST_ROBOTS_SUCCESS';\r\nexport const REQUEST_ROBOTS_FAIL = 'REQUEST_ROBOTS_FAIL';\r\n","import { CHANGE_SEARCH_FIELD } from '../actions/types';\r\n\r\nconst INITAL_STATE_SEARCH = {\r\n\tsearchField: '',\r\n};\r\n\r\nconst searchRobots = (state = INITAL_STATE_SEARCH, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase CHANGE_SEARCH_FIELD:\r\n\t\t\treturn { ...state, searchField: action.payload };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default searchRobots;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport requestRobotsReducer from './requestRobotsReducer';\r\nimport searchRobotsReducer from './searchRobotsReducer';\r\n\r\nexport default combineReducers({\r\n\tsearchField: searchRobotsReducer,\r\n\trobots: requestRobotsReducer,\r\n});\r\n","import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n\treturn (\r\n\t\t<div className='roboCard tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img\r\n\t\t\t\tsrc={`https://robohash.org/${id}?size=200x200`}\r\n\t\t\t\talt='monster'\r\n\t\t\t/>\r\n\t\t\t<div className=''>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{robots.map((user, i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Card\r\n\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\tid={robots[i].id}\r\n\t\t\t\t\t\tname={robots[i].name}\r\n\t\t\t\t\t\temail={robots[i].email}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n\treturn (\r\n\t\t<div className='pa2'>\r\n\t\t\t<input\r\n\t\t\t\taria-label='Search Robots'\r\n\t\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\t\t\ttype='search'\r\n\t\t\t\tplaceholder='search robots'\r\n\t\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Scroll = props => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tstyle={{\r\n\t\t\t\toverflowY: 'scroll',\r\n\t\t\t\tborder: '1px solid black',\r\n\t\t\t\theight: '500px',\r\n\t\t\t}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { hasError: false };\r\n\t}\r\n\r\n\tstatic getDerivedStateFromError(error) {\r\n\t\t// Update state so the next render will show the fallback UI.\r\n\t\treturn { hasError: true };\r\n\t}\r\n\r\n\t//if error render this else show the child.\r\n\trender() {\r\n\t\tif (this.state.hasError) {\r\n\t\t\treturn <h1> Oooops. That is not good.</h1>;\r\n\t\t}\r\n\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, { useState } from 'react';\r\n\r\nconst CounterButton = ({ color }) => {\r\n\tconst [count, setCount] = useState(0);\r\n\r\n\tconst updateCount = () => {\r\n\t\tsetCount(c => c + 1);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<button color={color} onClick={updateCount}>\r\n\t\t\tCount: {count}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nexport default CounterButton;\r\n","import React from 'react';\r\nimport CounterButton from './CounterButton';\r\n\r\nconst Header = () => {\r\n\tconsole.log('Header');\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1 className='f1'>RoboFriends</h1>\r\n\t\t\t<CounterButton color={'red'} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n//use memo can be used to prevent rendering for optimizing\r\n//since header rerenders along with every search key entered\r\nexport default React.memo(Header);\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport Header from '../components/Header';\r\n\r\nimport { setSearchField, requestRobots } from '../actions';\r\n\r\nconst App = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst searchField = useSelector(state => state.searchField.searchField);\r\n\tconst robots = useSelector(state => state.robots.robots);\r\n\tvar controller = new AbortController();\r\n\tvar signal = controller.signal;\r\n\r\n\tsignal.addEventListener('abort', function () {\r\n\t\tconsole.log('Request aborted');\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(requestRobots());\r\n\t}, [dispatch]);\r\n\r\n\tconst filteredRobots = robots.filter(robot => {\r\n\t\treturn robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n\t});\r\n\r\n\tconst onSearchChange = event => {\r\n\t\tdispatch(setSearchField(event.target.value));\r\n\t};\r\n\r\n\treturn !robots.length ? (\r\n\t\t<h1>Loading</h1>\r\n\t) : (\r\n\t\t<div className='tc'>\r\n\t\t\t<Header />\r\n\r\n\t\t\t<SearchBox searchChange={onSearchChange} />\r\n\t\t\t<Scroll>\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CardList robots={filteredRobots} />\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t</Scroll>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import {\r\n\tCHANGE_SEARCH_FIELD,\r\n\tREQUEST_ROBOTS_PENDING,\r\n\tREQUEST_ROBOTS_SUCCESS,\r\n\tREQUEST_ROBOTS_FAIL,\r\n} from './types';\r\n\r\nexport const setSearchField = text => {\r\n\treturn {\r\n\t\ttype: CHANGE_SEARCH_FIELD,\r\n\t\tpayload: text,\r\n\t};\r\n};\r\n\r\nexport const requestRobots = () => dispatch => {\r\n\tdispatch({ type: REQUEST_ROBOTS_PENDING });\r\n\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response => response.json())\r\n\t\t.then(data => {\r\n\t\t\tdispatch({ type: REQUEST_ROBOTS_SUCCESS, payload: data });\r\n\t\t})\r\n\t\t.catch(err => {\r\n\t\t\tdispatch({ type: REQUEST_ROBOTS_FAIL, payload: err });\r\n\t\t});\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nimport reducers from './reducers';\n\nimport 'tachyons';\nimport './index.css';\nimport App from './containers/App';\n\nconst logger = createLogger();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n\treducers,\n\tcomposeEnhancers(applyMiddleware(thunk, logger)),\n);\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}